name: Deploy docs to Cloudflare

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run with tmate.io debugging enabled"
        required: false
        type: string
        default: "false"
      branch:
        description: "Git branch or ref to checkout"
        required: true
        type: string
      environment:
        description: "Deployment environment (preview or production)"
        required: false
        type: string
        default: "preview"
  workflow_call:
    inputs:
      debug_enabled:
        description: "Run with tmate.io debugging enabled"
        required: false
        type: string
        default: "false"
      branch:
        description: "Git branch or ref to checkout"
        required: true
        type: string
      environment:
        description: "Deployment environment (preview or production)"
        required: false
        type: string
        default: "production"

defaults:
  run:
    shell: bash

permissions:
  contents: read
  deployments: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check for existing dist artifact
        id: check-artifact
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: dist
          path: dist/

      - name: Checkout
        if: steps.check-artifact.outcome == 'failure'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Setup Nix
        if: steps.check-artifact.outcome == 'failure'
        uses: ./.github/actions/setup-nix
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
        with:
          installer: quick
          system: x86_64-linux
          setup-cachix: true

      - name: Setup tmate debug session
        if: steps.check-artifact.outcome == 'failure' && inputs.debug_enabled == 'true'
        uses: mxschmitt/action-tmate@e5c7151931ca95bad1c6f4190c730ecf8c7dde48 # ratchet:mxschmitt/action-tmate@v3

      - name: Install dependencies
        if: steps.check-artifact.outcome == 'failure'
        run: nix develop -c just install

      - name: Build documentation site
        if: steps.check-artifact.outcome == 'failure'
        run: nix develop -c just build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.run_id }}
          path: dist/
          retention-days: 7
          include-hidden-files: true
          overwrite: true

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: https://starlight-nix-template.pages.dev
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.run_id }}
          path: dist/

      - name: Setup Nix
        uses: ./.github/actions/setup-nix
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
        with:
          installer: quick
          system: x86_64-linux
          setup-cachix: true

      - name: Deploy to Cloudflare Workers
        id: deployment
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
        run: |
          if [ "${{ inputs.environment }}" = "preview" ]; then
            nix develop -c just cf-deploy-preview ${{ inputs.branch }}
          else
            nix develop -c just cf-deploy-production ${{ inputs.branch }}
          fi
